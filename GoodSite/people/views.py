from django.core.exceptions import PermissionDenied
from django.http import HttpResponse, HttpResponseNotFound, HttpResponseBadRequest, HttpResponseForbidden, HttpResponseServerError
from django.shortcuts import render, redirect
import re

class data_handler:
    def __init__(self, year):
        #raise PermissionDenied()
        self.year = year
        self.dates = {
            2015: '–ë—ã–ª–æ —Ö–æ—Ä–æ—à–æ',
            2016: '–Ø —É–∂–µ –Ω–µ –ø–æ–º–Ω—é',
            2017: '–Ø —É–∂–µ –Ω–µ –ø–æ–º–Ω—é',
            2018: '–ë—ã–ª–æ –Ω–µ–ø–ª–æ—Ö–æ',
            2019: '–ë—ã–ª–æ —Ö–æ—Ä–æ—à–æ',
            2020: '–ë—ã–ª–æ —á—É–¥–µ—Å–Ω–æ',
            2021: '–î–æ–º–∞—à–Ω–∏–π –∞—Ä–µ—Å—Ç',
            2022: '–¢–∞–Ω—Ü—ã —Å –∫—Ä–∞—Å–æ—Ç–∫–æ–π',
            2023: '–ï—Å—Ç—å',
            2024: '–í–æ–∑–º–æ–∂–Ω–æ, –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ',
            2025: '–ë—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ'
        }
        def return_date_info(self):
            return self.dates[self.year]


class DataBase:
    __instance = None
    __connect = None

    def __new__(cls, *args, **kwargs):
        if cls.__instance is None:
            cls.__instance = super().__new__(cls)
        return cls.__instance

    def __del__(self):
        self.__instance = None
        self.__connect = None

    def __init__(self, user, psw, port):
        if self.__connect is None:
            self.user = user
            self.psw = psw
            self.port = port
            self.data = "DATA"

    def connect(self):
        print(f"–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:{self.user}, "
              f"{self.psw}, {self.port}")

    def close(self):
        print("–ó–∞–∫—Ä—ã—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")

    def read(self):
        return "–î–∞–Ω–Ω—ã–µ –∏–∑ –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"

    def write(self):
        print(f"–ó–∞–ø–∏—Å—å –≤ –ë–∞–∑—É –¥–∞–Ω–Ω—ã—Ö {self.data}")




pri_info = {
        '1' : ['–ê–±—Ä–∞–º–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª—å–±–µ—Ä—Ç–æ–≤–∏—á', '22-2.034'],
        '2' : ['–ë–ª–∏–∑–Ω—é–∫ –ò–ª—å—è –°–µ—Ä–≥–µ–µ–≤–∏—á', '22-2.035'],
        '3' : ['–ó–≤–µ—Ä–µ–≤ –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á', '22-2.036'],
        '4' : ['–ö–∞—Ä–∞–≥—É–∑–∏–Ω –ú–∞–∫—Å–∏–º –ò–≥–æ—Ä–µ–≤–∏—á', '22-2.037'],
        '5' : ['–ö—Ä—É–≥–ª–∏–∫ –ï–≤–≥–µ–Ω–∏–π –î–º–∏—Ç—Ä–∏–µ–≤–∏—á', '22-2.038'],
        '6' : ['–õ—ã—Å–∫–æ–≤ –í–ª–∞—Å –ï–≤–≥–µ–Ω—å–µ–≤–∏—á', '22-2.039'],
        '7' : ['–ú–∞–∫–ª—é—Å–æ–≤ –†–æ–º–∞–Ω –†–æ–º–∞–Ω–æ–≤–∏—á', '21-2.010'],
        '8' : ['–ú–∞–Ω–µ—à–∏–Ω –ê–Ω—Ç–æ–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á', '22-2.040'],
        '9' : ['–ü–µ—Ç—Ä–∞—á–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á', '22-2.041'],
        '10' : ['–°–∞—Ñ–æ–Ω–æ–≤ –ì–ª–µ–± –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á', '22-2.045'],
        '11' : ['–¢–µ—Ä–µ—à–∏–Ω –†–æ–º–∞–Ω –ü–∞–≤–ª–æ–≤–∏—á üé∂(‚ùÅ¬¥‚ó°`‚ùÅ)', '22-2.042'],
        '12' : ['–ß–µ—Ä—Ç–∫–æ–≤ –§–µ–¥–æ—Ä –ê–Ω–¥—Ä–µ–µ–≤–∏—á', '22-2.043'],
    }

menu = ['–ö–æ—Ä–æ—Ç–∫–æ', '–í–£–¶', '–ì–ª–∞–≤–Ω–∞—è']

data_db = [
    {'id':1, 'title':'–ú–∏—Ö–∞–∏–ª –í–∞–ª–µ—Ä—å–µ–≤–∏—á', 'content': '–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–µ–ø–æ–¥–≤–∞–≤–∞—Ç–µ–ª—è', 'is_public':True},
    {'id':2, 'title':'–û–ª–µ–≥ –î–º–∏—Ç—Ä–∏–µ–≤–∏—á', 'content': '–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ó–∞–≤–µ–¥—É—é—â–µ–≥–æ –∫–∞—Ñ–µ–¥—Ä—ã', 'is_public':True},
    {'id':3, 'title':'–†–æ–º–∞–Ω –ü–∞–≤–ª–æ–≤–∏—á', 'content': '–ë–∏–æ–≥—Ä–∞—Ñ–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∏–∫–∞', 'is_public':False},
]

# Create your views here.
def index(request):
    # out = dict(request.GET)
    # out = out.values()
    data = {'title': '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"',
            'menu': menu,
            'float': 3.14,
            'posts': data_db}

    return render(request, 'people/index.html', context=data) # or context=data or data


def about(request):
    return render(request, 'people/about.html')


def pri_group(request):
    out = '<h1> –ü—Ä–ò-201 </h1> <p>'
    for number, mas_of_info in pri_info.items():
        out += number + '.'
        out += mas_of_info[0]
        out += '</p>'
    return HttpResponse(out)


def pri_id(request, number_student):
    # if number_student > 30:
    #     return redirect('/', permanent=True)
    if str(number_student) in pri_info:
        out = '<h1> –ü—Ä–ò-201 </h1> <p>'
        mas_of_info = pri_info[str(number_student)]
        for info in mas_of_info:
            out += info + ' '
        out += '</p>'
        return HttpResponse(out)
    else:
        out = '<h1> –û—à–∏–±–∫–∞ </h1> <h3> –¢–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç </h3>'
        return HttpResponse(out)


def post_detail(request):
    if request.GET:
        info = dict(request.GET)
        out = ""
        for i, j in info.items():
            out += i
            out += "="
            out += j[0]
            out += " | "
        out = out[:-2]
        return HttpResponse(f'<h1>{out}</h1>')
    else:
        return HttpResponse(f'<h1>Get is empty</h1>')


def redirect_to_home(request):
    return redirect(index)


def redirect_to_Eugen(request, name):
    if re.fullmatch(r'[Ee]ugen', name):
        return redirect('spisok_pri', '5')


def categories(request, cat):
    return HttpResponse('<h1> –û—à–∏–±–∫–∞ </h1> <h3> –¢–∞–∫–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç </h3>')


def server_down(exception):
    return HttpResponseServerError('<h1> –°–µ—Ä–≤–µ—Ä —Å–µ–±—è –ø–ª–æ—Ö–æ —á—É–≤—Å—Ç–≤—É–µ—Ç. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ <h1>')


def page_not_found(request, exception):
    return HttpResponseNotFound('<h1> –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å!!! </h1>')


def forbidden(request, exception):
    return HttpResponseForbidden('<h1> –î–æ—Å—Ç—É–ø –ó–ê–ü–†–ï–©–ï–ù <h1>')


def bad_request(request, exception):
    return HttpResponseBadRequest('<h1> –ú—ã –Ω–µ –ø–æ–Ω—è–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å <h1>')


def date_handler(request, year):
    out = data_handler(year)
    return HttpResponse(out.return_date_info())